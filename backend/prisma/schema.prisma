generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native", "linux-musl-arm64-openssl-3.0.x"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                 String               @id @default(uuid())
  email              String               @unique
  name               String?
  googleId           String?              @unique
  hubspotId          String?              @unique
  createdAt          DateTime             @default(now())
  updatedAt          DateTime             @updatedAt
  tokens             Token[]
  Task               Task[]
  OngoingInstruction OngoingInstruction[]
}

model Token {
  id           String    @id @default(uuid())
  userId       String
  provider     String
  accessToken  String
  refreshToken String?
  expiresAt    DateTime?
  createdAt    DateTime  @default(now())
  updatedAt    DateTime  @updatedAt

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model Task {
  id          String   @id @default(uuid())
  userId      String
  description String
  status      String   @default("pending")
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model OngoingInstruction {
  id        String   @id @default(uuid())
  userId    String
  rule      String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
}
